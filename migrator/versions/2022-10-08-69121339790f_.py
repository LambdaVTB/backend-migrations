"""empty message

Revision ID: 69121339790f
Revises: 91922c04a85f
Create Date: 2022-10-08 06:09:35.031477

"""
from alembic import op
import sqlalchemy as sa
import models.news
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '69121339790f'
down_revision = '91922c04a85f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tags',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__tags')),
    sa.UniqueConstraint('name', name=op.f('uq__tags__name'))
    )
    op.create_table('tags_jobs',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('job_id', postgresql.UUID(), nullable=False),
    sa.Column('tag_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('fk__tags_jobs__job_id__jobs'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('fk__tags_jobs__tag_id__tags'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__tags_jobs'))
    )
    op.create_table('tags_news',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('news_id', postgresql.UUID(), nullable=False),
    sa.Column('tag_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['news_id'], ['news.id'], name=op.f('fk__tags_news__news_id__news'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('fk__tags_news__tag_id__tags'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__tags_news'))
    )
    op.drop_table('users_jobs')
    op.create_unique_constraint(op.f('uq__jobs__name'), 'jobs', ['name'])
    op.add_column('news', sa.Column('url', sa.String(), nullable=False))
    op.add_column('users', sa.Column('password', sa.String(), nullable=False))
    op.add_column('users', sa.Column('job_id', postgresql.UUID(), nullable=False))
    op.create_unique_constraint(op.f('uq__users__username'), 'users', ['username'])
    op.create_foreign_key(op.f('fk__users__job_id__jobs'), 'users', 'jobs', ['job_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk__users__job_id__jobs'), 'users', type_='foreignkey')
    op.drop_constraint(op.f('uq__users__username'), 'users', type_='unique')
    op.drop_column('users', 'job_id')
    op.drop_column('users', 'password')
    op.drop_column('news', 'url')
    op.drop_constraint(op.f('uq__jobs__name'), 'jobs', type_='unique')
    op.create_table('users_jobs',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('users_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('job_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name='fk__users_jobs__job_id__jobs', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], name='fk__users_jobs__users_id__users', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='pk__users_jobs')
    )
    op.drop_table('tags_news')
    op.drop_table('tags_jobs')
    op.drop_table('tags')
    # ### end Alembic commands ###
