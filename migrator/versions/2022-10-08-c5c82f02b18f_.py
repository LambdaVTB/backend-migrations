"""empty message

Revision ID: c5c82f02b18f
Revises: 
Create Date: 2022-10-08 23:17:27.558903

"""
from alembic import op
import sqlalchemy as sa
import models.news
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c5c82f02b18f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jobs',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__jobs')),
    sa.UniqueConstraint('name', name=op.f('uq__jobs__name'))
    )
    op.create_table('raw',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('processed', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('__ts_vector__', models.raw.TSVector(), sa.Computed("to_tsvector('russian', text)", persisted=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__raw'))
    )
    op.create_index('ix_raw_text_ts_vector__', 'raw', ['__ts_vector__'], unique=False, postgresql_using='gin')
    op.create_table('tags',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__tags')),
    sa.UniqueConstraint('name', name=op.f('uq__tags__name'))
    )
    op.create_table('news',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('summary', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('news_type', sa.Enum('DIGEST', 'INSIGHT', 'TREND', name='newstypes'), nullable=False),
    sa.Column('original', postgresql.UUID(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['original'], ['raw.id'], name=op.f('fk__news__original__raw')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__news'))
    )
    op.create_table('tags_jobs',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('job_id', postgresql.UUID(), nullable=False),
    sa.Column('tag_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('fk__tags_jobs__job_id__jobs'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('fk__tags_jobs__tag_id__tags'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__tags_jobs'))
    )
    op.create_table('users',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('job_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('fk__users__job_id__jobs'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__users')),
    sa.UniqueConstraint('username', name=op.f('uq__users__username'))
    )
    op.create_table('tags_news',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('news_id', postgresql.UUID(), nullable=False),
    sa.Column('tag_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['news_id'], ['news.id'], name=op.f('fk__tags_news__news_id__news'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('fk__tags_news__tag_id__tags'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__tags_news'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tags_news')
    op.drop_table('users')
    op.drop_table('tags_jobs')
    op.drop_table('news')
    op.drop_table('tags')
    op.drop_index('ix_raw_text_ts_vector__', table_name='raw', postgresql_using='gin')
    op.drop_table('raw')
    op.drop_table('jobs')
    # ### end Alembic commands ###
